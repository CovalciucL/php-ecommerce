apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    {{- include "ecommerce.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "ecommerce.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ecommerce.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        runAsUser: 0
      containers:
        - name: {{ .Values.container.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetport }}
              protocol: TCP
          env:
          - name: DB_HOST
            value: {{ .Values.environments.DB_HOST | default (print .Release.Name "-mysql") }}
          - name: DB_NAME
            value: {{ .Values.environments.DB_NAME}} 
          - name: DB_USERNAME
            value: {{ .Values.environments.DB_USERNAME}} 
          - name: DB_PASSWORD
            value: {{ .Values.environments.DB_PASSWORD}}  
          - name: APP_URL
            value: {{ .Values.environments.APP_URL}}
          - name: EMAIL_USERNAME
            value: {{ .Values.environments.EMAIL_USERNAME}}
          - name: EMAIL_PASSWORD
            value: {{ .Values.environments.EMAIL_PASSWORD}}
          - name: ADMIN_EMAIL
            value: {{ .Values.environments.ADMIN_EMAIL}}
      {{- if ne .Values.environments.APP_ENV "production"}}
          volumeMounts: 
            - mountPath: {{ .Values.container.volumeMounts.mountPath }}
              name: {{ .Values.container.volumeMounts.name }}
      volumes:
      - name: app
        hostPath:
          path: /app
          type: Directory
      {{- end }}
      